version: '3.8'

services:
  # PostgreSQL + pgvector 数据库服务
  postgres:
    image: pgvector/pgvector:pg15
    container_name: fast_rag_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: fast_rag
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_pgvector.sql:/docker-entrypoint-initdb.d/init_pgvector.sql
    networks:
      - fast_rag_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d fast_rag"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin 管理界面（可选）
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: fast_rag_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@fastrag.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - fast_rag_network
    depends_on:
      postgres:
        condition: service_healthy

  # Redis 缓存服务（可选，用于提升性能）
  redis:
    image: redis:7-alpine
    container_name: fast_rag_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fast_rag_network
    command: redis-server --appendonly yes

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  redis_data:
    driver: local

networks:
  fast_rag_network:
    driver: bridge
